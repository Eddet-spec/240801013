
Question 1
Given a string, s, consisting of alphabets and digits, find the frequency of each digit in the given string.
Input Format
The first line contains a string, num which is the given number.
Constraints
1 ≤ len(num) ≤ 1000
All the elements of num are made of English alphabets and digits.
Output Format
Print ten space-separated integers in a single line denoting the frequency of each digit from 0 to 9.
Sample Input 0
a11472o5t6
Sample Output 0
0 2 1 0 1 1 1 1 0 0
Explanation 0
In the given string:
·         1 occurs two times.

·         2, 4, 5, 6 and 7 occur one time each.

The remaining digits 0, 3, 8 and 9 don't occur at all.
#include <stdio.h>
int main(){
    char s[1024];
    int i,len,arr[10];
    scanf("%s",s);
    for(i=0;s[i]!='\0';i++);
    len=i;
    for(i=0;i<10;i++)
        arr[i]=0;
    for(i=0;i<len;i++){
        if(s[i]>='0'&&s[i]<='9')
        {
            arr[(int)(s[i]-'0')]++;
        }
    }
    for(i=0;i<10;i++)
        printf("%d ",arr[i]);
        
    return 0;
}
Feedback
Input	Expected	Got	
a11472o5t60 2 1 0 1 1 1 1 0 00 2 1 0 1 1 1 1 0 0lw4n88j12n10 2 1 0 1 0 0 0 2 00 2 1 0 1 0 0 0 2 01v88886l256338ar0ekk1 1 1 2 0 1 2 0 5 01 1 1 2 0 1 2 0 5 0
Passed all tests!  

Question 2
Today, Monk went for a walk in a garden. There are many trees in the garden and each tree has an English alphabet on it. While Monk was walking, he noticed that all trees with vowels on it are not in good state. He decided to take care of them. So, he asked you to tell him the count of such trees in the garden.
Note: The following letters are vowels: 'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o' and 'u'.
Input:
The first line consists of an integer T denoting the number of test cases.
Each test case consists of only one string, each character of string denoting the alphabet (may be lowercase or uppercase) on a tree in the garden.
Output:
For each test case, print the count in a new line.
Constraints:
1 ≤ T ≤ 10
1 ≤ length of string ≤ 105
SAMPLE INPUT
2
nBBZLaosnm

JHkIsnZtTL
SAMPLE OUTPUT
2

1
Explanation
In test case 1, a and o are the only vowels. So, count=2
#include <stdio.h>
int main(){
    int t,len,i,j,count;
    char str[100000];
    char vowel[]="aeiouAEIOU";
    scanf("%d",&t);
    while(t--){
        scanf("%s",str);
        for(i=0;str[i]!='\0';i++);
        len=i;
        count=0;
        for(i=0;i<len;i++){
            for(j=0;j<10;j++){
                if(str[i]==vowel[j])
                {
                    count++;
                    break;
                }
            }
        }
        printf("%d\n",count);
    }
    return 0;
}
Input                                    expected                      got
2
nBBZLaosnm
JHkIsnZtTL2
12
12
nBBZLaosnm
JHkIsnZtTL2
12
1
Passed all tests!  

Question 3
Given a sentence, s, print each word of the sentence in a new line.
Input Format
The first and only line contains a sentence, s.
Constraints
1 ≤ len(s) ≤ 1000
Output Format
Print each word of the sentence in a new line.
Sample Input 0
This is C
Sample Output 0
This

is

C
Explanation 0
In the given string, there are three words ["This", "is", "C"]. We have to print each of these words in a new line.
#include <stdio.h>
int main(){
    char s[1024];
    int i,len;
    scanf("%[^\n]",s);
    for(i=0;s[i]!='\0';i++);
    len=i;
    for(i=0;i<len;i++){
        if(s[i] ==' ')
            printf("\n");
        else
        printf("%c",s[i]);
    }
    return 0;
}
Feedback
Input	Expected	Got	
This is CThis
is
CThis
is
CLearning C is funLearning
C
is
funLearning
C
is
fun
Passed all tests!  

Question 4
Input Format
You are given two strings, a and b, separated by a new line. Each string will consist of lower case Latin characters ('a'-'z').
Output Format
In the first line print two space-separated integers, representing the length of a and b respectively.

In the second line print the string produced by concatenating a and b (a + b).

In the third line print two strings separated by a space, a' and b'. a' and b' are the same as a and b, respectively, except that their first characters are swapped.
Sample Input
abcd

ef
Sample Output
4 2

abcdef

ebcd af
Explanation
a = "abcd"

b = "ef"

|a| = 4

|b| = 2

a + b = "abcdef"

a' = "ebcd"

b' = "af"
#include <stdio.h>
#include <string.h>

int main(){
    char a[101],b[101];
    scanf("%s",a);
    scanf("%s",b);
    printf("%lu %lu\n",strlen(a),strlen(b));
    printf("%s%s\n",a,b);
    char temp=a[0];
    a[0]=b[0];
    b[0]=temp;
    printf("%s %s\n",a,b);
    return 0;
}
Feedback
Input	Expected	Got	
abcd
ef4 2
abcdef
ebcd af4 2
abcdef
ebcd af
Passed all tests!  
